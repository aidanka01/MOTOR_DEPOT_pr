public class Task {
 /*   Проект :https://github.com/ElnuraTad/Motor_Depot

    Загрузить проект с гитхаб.

    Обязательно прочитать readme file.

    Дедлайн : 14.09.2022

    Первый этап:

    Создайте JSON-файл с данными о грузовиках на автобазе. Пример файла:

    {

        "id" : "1", "name" : "Renault Magnum", "driver" : "", "state" : "base"

        "id" : "2", "name" : "Volvo", "driver" : "", "state" : "base"

        "id" : "3", "name" : "DAF XT", "driver" : "", "state" : "base"

    }

    Создайте все необходимые классы для хранения информации о автопарке. Обеспечьте необходимый уровень сокрытия данных и инкапсуляцию полей.

    При запуске программы отобразите в консоли таблицу с данным из этого json-файла.

#  | Bus       |  Driver  |  State

—+———-+———+———

        1 | Renault   |             | On Base

2 | Volvo  |                 | On Base

3 | DAF XT  |            | On Base

    Предусмотрите обработку исключения в случае, если json-файл не удастся найти по указанному пути.

    Второй этап:

    Создайте JSON файл с информацией о водителях, в файле укажите уникальный идентификатор, и имя водителя. Добавьте в программу классы и код для загрузки этого JSON файла.

    {

        "id" : "driver-1", "name" : "Petr"

        "id" : "driver-2", "name" : "Askar"

        "id" : "driver-3", "name" : "Uson"

    }

    После запуска программы выведите две таблички, в одной покажите информацию о грузовиках (как в первом этапе), во второй информацию о водителях.

            #   Driver                  |  Bus

—+———-----------+———+

        1 | Petr                     |

            2 | Askar                  |

            3 | Uson                   |

    Третий этап:

    Реализуйте шаблон проектирования "состояние" для хранения состояния грузовика. Каждый грузовик может быть в одном из трех состояний:

            ●  Состояние "на базе" - base

●  Состояние "в пути" - route

●  Состояние "На ремонте" - repair

    С каждым грузовиком можно выполнить следующие действия (выполнить следующие методы):

            ●  Сменить водителя - changeDriver

●  Отправить на маршрут - startDriving

●  Отправить на ремонт - startRepair



    Состояние "На базе"

    Когда автобус на базе, то с ним можно делать следующие действия:

            ●  Сменить водителя - changeDriver - выбрать первого свободного водителя, и назначить его на этот грузовик. Если у грузовика уже был водитель, то сменить его на нового. Вывести сообщение, что "​Теперь грузовик <название>, ведёт водитель <такой-то>​". Если свободных водителей нет, то выдать ошибку "Нет свободных водителей".

            ●  Отправить на маршрут - startDriving - Если у грузовика есть водитель, то выйти на маршрут (установить состояние route) и показать сообщение, что "успешно вышли на маршрут".

            ●  Отправить на ремонт - startRepair - изменить состояние на "repair" и показать сообщение.

            Состояние "В пути"

    Когда грузовик в пути, то с ним можно делать следующие действия:

            ● Сменить водителя - changeDriver - выдать ошибку, что "Грузовик в пути, невозможно сменить водителя".

            ● Отправить на маршрут - startDriving - Вернуть ошибку, что "Грузовик уже в пути".
            ● Отправить на ремонт - startRepair - изменить состояние на "repair" и показать сообщение.

            Состояние "На ремонте"

    Когда грузовик на ремонте, то с ним можно делать следующие действия:

            ● Сменить водителя - changeDriver - выдать ошибку, что "Нельзя сменить водителя".

            ● Отправить на маршрут - startDriving - случайным образом изменить состояние грузовика на “route” или “base” и показать сообщение об этом.

● Отправить на ремонт - startRepair - выдать ошибку, что "Уже в ремонте".

    Четвертый этап:

    После вывода таблиц, программа должна запросить у пользователя идентификатор (id) грузовика и вывести информацию о нем:

    Например:

    N : 1

    Bus: Renault Magnum

    Driver : Petr

    Bus state : On base

    Предусмотреть обработку исключения на случай, если пользователь вводит несуществующий номер грузовика. В случае ошибки просить пользователя ввести номер еще раз.

    После вывода информации о грузовике программа должна запросить у пользователя как изменить состояние грузовика:*/


}
